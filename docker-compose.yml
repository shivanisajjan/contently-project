version: '2'
services:
  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: mysql
    volumes:
      - $HOME/mysql:/var/lib/mysql

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    volumes:
      - $HOME/mongo:/data/db
  neo4j:
    image: neo4j:latest
    container_name: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
#    volumes:
#      - $HOME/imports:/var/lib/neo4j/import
    volumes:
      - ./plugins:/plugins
      - ./data:/data
      - ./import:/import
    environment:
      NEO4J_AUTH: none


  eureka-server:
    build: eureka-server
    image: eureka-server:1.0.0
    container_name: eureka-server
    ports:
      - 8085:8085


  config-server:
    build: config-server
    image: config-server:1.0.0
    container_name: config-server
    restart: always
    ports:
      - 8888:8888

  api-gateway:
    build: api-gateway
    image: api-gateway:1.0.0
    container_name: api-gateway
    restart: always
    depends_on:
      - eureka-server
      - user-management
      - profile-service
      - content-service
      - recommendation-service
      - notification
      - publication-service
      - purchasing-service
      - s3storage-service
    ports:
      - 8525:8525
    links:
      - user-management
      - eureka-server
      - profile-service
      - content-service
      - recommendation-service
      - notification
      - publication-service
      - purchasing-service
      - s3storage-service


  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - 15672:15672
      - 8045:5762

  recommendation-service:
    build: recommendation-service
    container_name: recommendation-service
    restart: always
    depends_on:
      - neo4j
      - rabbitmq
      - config-server
      - eureka-server
    ports:
      - 8088:8088

  user-management:
    build: user-management
    image: user-management:1.0.0
    container_name: user-management
    restart: always
    depends_on:
      - mysql
      - rabbitmq
      - config-server
      - eureka-server
    links:
      - mysql
      - rabbitmq
      - config-server
      - eureka-server

  profile-service:
    build: profile-service
    image: profile-service:1.0.0
    container_name: profile-service
    restart: always
    depends_on:
      - mongo
      - rabbitmq
      - config-server
      - eureka-server
    links:
      - mongo
      - rabbitmq
      - config-server
      - eureka-server

  content-service:
      build: content-service
      container_name: content-service
      restart: always
      depends_on:
        - mongo
        - rabbitmq
        - config-server
        - eureka-server
      links:
        - mongo
        - rabbitmq
        - config-server
        - eureka-server
      ports:
        - 8082:8082
  
  s3storage-service:
      build: s3storage-service
      container_name: s3storage-service
      restart: always
      depends_on:
        - config-server
        - eureka-server
      links:
        - config-server
        - eureka-server
      ports:
        - 8081:8081
 

  notification:
     build: notification
     image : notification:1.0.0
     container_name: notification
     restart: always
     depends_on:
       - mongo
       - rabbitmq
       - config-server
       - eureka-server
     links:
       - mongo
       - rabbitmq
       - config-server
       - eureka-server
     ports:
       - 8716:8716

  publication-service:
      build: publication-service
      container_name: publication-service
      restart: always
      depends_on:
        - mongo
        - rabbitmq
        - config-server
        - eureka-server
      links:
        - mongo
        - rabbitmq
        - config-server
        - eureka-server
      ports:
        - 8083:8083

  purchasing-service:
    build: purchasing-service
    image: purchasing-service
    container_name: purchasing-service
    restart: always
    depends_on:
      - mongo
      - rabbitmq
      - config-server
      - eureka-server
    links:
      - mongo
      - rabbitmq
      - config-server
      - eureka-server
    ports:
      - 8181:8181

  contently-frontend:
      build: frontend
      restart: always
      container_name: contently-frontend
      depends_on:
        - api-gateway
      ports:
        - 4200:80

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    restart: always
    network_mode: host
    hostname: localhost
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
  grafana:
    image: grafana/grafana
    ports:
        - "3000:3000"
    depends_on:
        - prometheus
    network_mode: "host"
    hostname: localhost

#  portainer:
#    image: portainer/portainer
#    container_name: portainer
#    restart: always
#    ports:
#      - 8000:8000
#      - 9000:9000
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#      - portainer_data:/data

